#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å MacBook
# –ü—É—à–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –î–µ–ø–ª–æ–π —Å MacBook - Push –≤ Git"
echo "================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    print_error "–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è git –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
if [ ! -d ".git" ]; then
    print_warning "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..."
    git init
    print_success "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"

    # –ó–∞–ø—Ä–æ—Å–∏—Ç—å URL —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo ""
    echo "–í–≤–µ–¥–∏—Ç–µ URL git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: git@github.com:username/repo.git):"
    read REPO_URL

    if [ -z "$REPO_URL" ]; then
        print_error "URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω"
        exit 1
    fi

    git remote add origin "$REPO_URL"
    print_success "–£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω: $REPO_URL"
fi

# –°–æ–∑–¥–∞—Ç—å .gitignore –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".gitignore" ]; then
    print_warning "–°–æ–∑–¥–∞–Ω–∏–µ .gitignore —Ñ–∞–π–ª–∞..."
    cat > .gitignore << 'EOF'
# Dependencies
node_modules/
*/node_modules/

# Build outputs
frontend/dist/
backend/dist/

# Environment variables
.env
.env.local
.env.production
*/.env
*/.env.local

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*/logs/

# OS
.DS_Store
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo

# PM2
.pm2/

# Certificates (if sensitive)
certs/*.key
certs/*.pem

# Temporary files
*.tmp
*.temp

# Database
*.db
*.sqlite
EOF
    print_success ".gitignore —Å–æ–∑–¥–∞–Ω"
fi

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å Git:"
git status

# –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
echo ""
print_warning "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å..."
git add .

# –ó–∞–ø—Ä–æ—Å–∏—Ç—å commit message
echo ""
echo "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ (–∏–ª–∏ Enter –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):"
read COMMIT_MSG

if [ -z "$COMMIT_MSG" ]; then
    COMMIT_MSG="Deploy: URL redirects for old category paths"
fi

# –°–¥–µ–ª–∞—Ç—å –∫–æ–º–º–∏—Ç
echo ""
print_warning "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞..."
git commit -m "$COMMIT_MSG" || {
    print_warning "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏–ª–∏ –∫–æ–º–º–∏—Ç –Ω–µ —É–¥–∞–ª—Å—è"
}

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "main")

# –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Ç–∫—É –≤ main
if [ "$CURRENT_BRANCH" = "HEAD" ] || [ -z "$CURRENT_BRANCH" ]; then
    CURRENT_BRANCH="main"
    git branch -M main
    print_success "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ç–∫–∞: main"
fi

# –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ push
echo ""
echo "–ì–æ—Ç–æ–≤ –∫ push –≤ –≤–µ—Ç–∫—É: $CURRENT_BRANCH"
echo "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n):"
read CONFIRM

if [ "$CONFIRM" != "y" ] && [ "$CONFIRM" != "Y" ]; then
    print_warning "Push –æ—Ç–º–µ–Ω–µ–Ω"
    exit 0
fi

# Push –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
echo ""
print_warning "Push –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
git push -u origin "$CURRENT_BRANCH" || {
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ push. –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –∫–ª—é—á –∏–ª–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞."
    exit 1
}

print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Git!"
echo ""
echo "‚ú® –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å deploy-server.sh –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
