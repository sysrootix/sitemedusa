#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ
# –°–∫–∞—á–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ git, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ"
echo "============================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚Ñπ $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    print_error "–û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è git
if ! command -v git &> /dev/null; then
    print_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ git: sudo apt install git"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js: https://nodejs.org/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è npm
if ! command -v npm &> /dev/null; then
    print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ Git
echo ""
print_info "–®–∞–≥ 1/8: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ Git"
echo "-----------------------------------"

if [ -d ".git" ]; then
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
    if ! git diff-index --quiet HEAD --; then
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ stash..."
        git stash
    fi

    # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    print_info "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"

    # Pull –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print_warning "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    git pull origin "$CURRENT_BRANCH" || {
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ Git"
        exit 1
    }

    print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Git"
else
    print_error "–≠—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –°–Ω–∞—á–∞–ª–∞ —Å–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç."
    exit 1
fi

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Backend
echo ""
print_info "–®–∞–≥ 2/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Backend"
echo "---------------------------------------"

cd backend

if [ ! -f "package.json" ]; then
    print_error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend"
    exit 1
fi

print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend..."


print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ backend —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

cd ..

# –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Frontend
echo ""
print_info "–®–∞–≥ 3/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Frontend"
echo "---------------------------------------"

cd frontend

if [ ! -f "package.json" ]; then
    print_error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ frontend"
    exit 1
fi

print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."


print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

cd ..

# –®–∞–≥ 4: –°–±–æ—Ä–∫–∞ Backend
echo ""
print_info "–®–∞–≥ 4/8: –°–±–æ—Ä–∫–∞ Backend"
echo "----------------------"

cd backend

print_warning "–°–±–æ—Ä–∫–∞ backend..."
npm run build || {
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ backend"
    exit 1
}

print_success "Backend —Å–æ–±—Ä–∞–Ω"

# –®–∞–≥ 5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
echo ""
print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è slug –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)..."
ts-node -r tsconfig-paths/register src/scripts/generateProductSlugs.ts || {
    print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é slug (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –µ—Å—Ç—å)"
}

cd ..

# –®–∞–≥ 6: –°–±–æ—Ä–∫–∞ Frontend
echo ""
print_info "–®–∞–≥ 6/8: –°–±–æ—Ä–∫–∞ Frontend"
echo "-----------------------"

cd frontend

print_warning "–°–±–æ—Ä–∫–∞ frontend..."
npm run build || {
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ frontend"
    exit 1
}

print_success "Frontend —Å–æ–±—Ä–∞–Ω"

cd ..

# –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
echo ""
print_info "–®–∞–≥ 7/8: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PM2"
echo "----------------------"

if ! command -v pm2 &> /dev/null; then
    print_warning "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2 –≥–ª–æ–±–∞–ª—å–Ω–æ..."
    npm install -g pm2 || {
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PM2. –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ sudo"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo npm install -g pm2"
        exit 1
    }
    print_success "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –®–∞–≥ 8: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo ""
print_info "–®–∞–≥ 8/8: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
echo "-----------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ "frontend-dev-site" –∏ "backend-dev-site"
if pm2 list | grep -q "frontend-dev-site"; then
    print_warning "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ frontend-dev-site..."
    pm2 restart frontend-dev-site
else
    print_info "–ó–∞–ø—É—Å–∫ frontend —á–µ—Ä–µ–∑ ecosystem.config.js"
    pm2 start ecosystem.config.js --only frontend
fi

if pm2 list | grep -q "backend-dev-site"; then
    print_warning "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend-dev-site..."
    pm2 restart backend-dev-site
else
    print_info "–ó–∞–ø—É—Å–∫ backend —á–µ—Ä–µ–∑ ecosystem.config.js"
    pm2 start ecosystem.config.js --only backend
fi

pm2 save

print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã"

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
echo ""
print_info "–°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
pm2 list

echo ""
print_success "================================"
print_success "‚ú® –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
print_success "================================"

echo ""
print_info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã PM2:"
echo "  pm2 list          - –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "  pm2 logs          - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "  pm2 logs backend-dev-site  - –õ–æ–≥–∏ backend"
echo "  pm2 logs frontend-dev-site - –õ–æ–≥–∏ frontend"
echo "  pm2 restart all   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "  pm2 stop all      - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "  pm2 monit         - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"

echo ""
print_info "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
echo "  pm2 startup"
echo "  pm2 save"